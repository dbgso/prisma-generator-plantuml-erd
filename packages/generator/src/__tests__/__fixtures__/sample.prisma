datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// ユーザ
model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?

  languages Language[]

  /// @HideField({ output: false, input: true })
  created_at DateTime @default(now())
  /// @HideField({ output: false, input: true })
  updated_at DateTime @updatedAt()

  /// team
  team      Team     @relation(fields: [team_id], references: [id])
  team_id   String
  Company   Company? @relation(fields: [companyId], references: [id])
  companyId String?

  @@map("users")
}

/// Teams
model Team {
  id String @id @default(uuid())

  /// users
  users User[]

  companies Company[]

  /// @HideField({ output: false, input: true })
  created_at DateTime @default(now())
  /// @HideField({ output: false, input: true })
  updated_at DateTime @updatedAt()

  @@map("teams")
}

/// 会社
model Company {
  id String @id @default(uuid())

  teams Team[]

  /// @HideField({ output: false, input: true })
  created_at DateTime @default(now())
  /// @HideField({ output: false, input: true })
  updated_at DateTime @updatedAt()
  User       User[]

  @@map("companies")
}

enum NotificationType {
  newPosts
  newComments
  newFollowers
  reply
  heartOnPost
  heartOnComment
  heartOnReply
}

enum Language {
  Typescript
  Javascript
  Rust
  Go
  Python
  Cpp
}

enum State {
  Active
  Pending
  Banned
}
